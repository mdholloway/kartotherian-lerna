# Source ordering is important for ref value resolution - if uri is not fully resolved before it is referenced,
# it might be included in incomplete form.  TODO: detect dependencies/throw on circular

#
# Storage & generation
#
# v1store:
#   uri: file://./vectors?filetype=pbf

gen:
  uri: bridge://
  xml:
    npm: ["osm-bright-source", "data.xml"]
g:
  public: true
  uri: vector://
  formats: [png,json,headers,svg,jpeg]
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: gen}

c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v1&repfactor=1&durablewrite=0&createIfMissing=1
oz:
  uri: overzoom://
  params:
    source: {ref: c}
osm:
  public: true
  pbfsource: oz
  formats: [png,json,headers,svg,jpeg]
  uri: vector://
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: oz}

#  v1a:
#     uri: autogen://?saveafter=0&minzoom=0&maxzoom=25
#     ref: {store: v1store, generator: v1gen}


gen2:
  uri: bridge://
  xml:
    npm: ["osm-bright-source", "data.xml"]
  xmlLayers: []

gen3:
  uri: bridge://
  xml:
    npm: ["osm-bright-source", "data.xml"]
  xmlLayers: [road, road_label]

mixer:
  uri: layermixer://
  params:
    sources: [{ref: gen2}, {ref: gen3}]

mix:
  public: true
  uri: vector://
  formats: [png,json,headers,svg,jpeg]
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: mixer}
