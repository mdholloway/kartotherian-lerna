# Source ordering is important for ref value resolution - if uri is not fully resolved before it is referenced,
# it might be included in incomplete form.  TODO: detect dependencies/throw on circular

#
# Storage & generation
#
# v1store:
#   uri: file://./vectors?filetype=pbf

v1gen:
  public: true
  uri: bridge://
  xml:
    npm: ["osm-bright-source", "data.xml"]

v1c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v1&repfactor=1&durablewrite=0&blocksize=0
v2c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v2&repfactor=1&durablewrite=0&blocksize=0
v3c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v3&repfactor=1&durablewrite=0&blocksize=131072
v4c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v4&repfactor=1&durablewrite=0

#
# Filters/converters
#
#  v1a:
#     uri: autogen://?saveafter=0&minzoom=0&maxzoom=25
#     ref: {store: v1store, generator: v1gen}
v1:
  uri: overzoom://
  ref: {source: v1c}
v2:
  uri: overzoom://
  ref: {source: v2c}

#
# Styles
#
s1:
  public: true
  uri: vector://
  formats: [png,json,headers,svg,jpeg]
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: v1}
s2:
  public: true
  uri: vector://
  formats: [png,json,headers,svg,jpeg]
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: v2}

g:
  public: true
  uri: vector://
  formats: [png,json,headers,svg,jpeg]
  xml:
    npm: ["osm-bright-style", "project.xml"]
  xmlSetParams:
    source: {ref: v1gen}
