# Source ordering is important for ref value resolution - if uri is not fully resolved before it is referenced,
# it might be included in incomplete form.  TODO: detect dependencies/throw on circular

#
# Storage & generation
#
v1store:
  uri: file://./vectors?filetype=pbf
v1gen:
  uri: bridge://
  npm: {"": ["osm-bright-source", "data.xml"]}
  public: true
v1c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v1&repfactor=1&durablewrite=0&blocksize=10
v2c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v2&repfactor=1&durablewrite=0&blocksize=10
v3c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v3&repfactor=1&durablewrite=0&blocksize=131072
v4c:
  uri: cassandra://?cp=127.0.0.1&keyspace=v3&repfactor=1&durablewrite=0

#
# Filters/converters
#
#  v1a:
#     uri: autogen://?saveafter=0&minzoom=0&maxzoom=25
#     ref: {store: v1store, generator: v1gen}
v1:
  uri: overzoom://
  ref: {source: v1c}
v3:
  uri: overzoom://
  ref: {source: v3c}

#
# Styles
#
s1:
  uri: style://
  npm: {xml: ["osm-bright-style", "project.xml"]}
  ref: {source: v1}
  public: true
s3:
  uri: style://
  npm: {xml: ["osm-bright-style", "project.xml"]}
  ref: {source: v3}
  public: true

g:
  uri: style://
  npm: {xml: ["osm-bright-style", "project.xml"]}
  ref: {source: v1gen}
  public: true
